import java.util.Scanner;

class Binaria {
    public static void main(String[] args) {
        Scanner sC = new Scanner(System.in);
        int length = sC.nextInt(); //takes the values entered by user and stores them
        int block = sC.nextInt();
        int sums = sC.nextInt();
        
        int bSum = 0; //number of binary numbers that satisfy the conditions (will be printed at very end)
        
        int[] sumArray = new int[block]; //creates an array to store the "sums" (ex.  3222 into 3,2,2,2)
        String sumsString = Integer.toString(sums);
        for (int i = 0; i < block; i++){ //for loop to put the "sums" numbers into array seperatly
            sumArray[i] = Integer.parseInt(sumsString.substring(i,i+1));
        }
        
        for (int i = 0; i < Math.pow(2,length); i++){ //runs from 0 to the highest decimal version of the given length (ex. len=7 so the loop will run through 0->2^7 whihc is 128. this is so we can check all the possible binary values)
            String Binary = DecimalToBinary(i); // calls decimaltobianry method to convert the "i" decimal value into its binary (without 0s on left side)
            String zerodBinary = addZeros(Binary,length); 
            
            boolean check = true;
            for (int j = 0; j <= length - block; j++){ // to check the little blocks in our binary number (ex. each block of 4 in our binary number which has length 7)
                String binaryPart = zerodBinary.substring(j,j+block); //gets the block we need to check
                int s = binaryPartSum(binaryPart,block);
                if (s!=sumArray[j]){ //if the sum of the block (calculated by method binaryPartSum) isnt equal to the num given by user check will be false (ex. binaryblock is 0110 and user gave 3, check will be wring since sum= 2!=3)
                    check = false;
                }
            }
            if(check){
                bSum ++;
            }
        }
        System.out.println(bSum); //prints the num of binary numbers that satisfy conditions
    }
    
    private static int binaryPartSum(String binary, int block){ //to find the sum of each block
        int sum = 0;
        for(int i = 0; i < block; i++){
            if (binary.substring(i,i+1) != "0"){ 
                sum += Integer.parseInt(binary.substring(i,i+1)); //adds the number of 1s into sum 
            }
        }
        return sum;
    }
    
    private static String DecimalToBinary(int decimal){ //converts parameter decimal into binary
        int remainder;
        String result = "";
        while (decimal > 0)
        {
            remainder = decimal % 2;
            decimal /= 2;
            result = remainder + result;
        }
        return result;
    }
    
    private static String addZeros(String binary, int len){ //adds 0s to the binary number so it can be the same length as the given length
        String added="";
        for(int i = 0; i < len - binary.length(); i++){
            added += "0";
        }
        return added+binary;

    }
}